apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
spec:
{{- if .Values.cfk.license }}
  license:
    secretRef: cfk-license
{{- end }}
{{- if or (.Values.tolerations) (.Values.nodeAffinity) }}
  podTemplate:
    tolerations:
{{ .Values.tolerations | default list | toYaml | indent 4 }}
{{- if .Values.nodeAffinity }}
    affinity:
      nodeAffinity:
{{ .Values.nodeAffinity | default dict | toYaml | indent 8 }}
{{- end }}
{{- end }}
  dataVolumeCapacity: {{ .Values.cfk.confluentPlatform.kraft.diskSize }}
  configOverrides:
    log4j:
      - log4j.rootLogger=INFO, stdout, stderr
      - log4j.appender.stdout.Threshold = TRACE
      - log4j.appender.stdout.Target   = System.out
      - log4j.appender.stdout.filter.filter1=org.apache.log4j.varia.LevelRangeFilter
      - log4j.appender.stdout.filter.filter1.levelMin=TRACE
      - log4j.appender.stdout.filter.filter1.levelMax=INFO
      - log4j.appender.stderr = org.apache.log4j.ConsoleAppender
      - log4j.appender.stderr.Threshold = WARN
      - log4j.appender.stderr.Target   = System.err
      - log4j.appender.stderr.layout=org.apache.log4j.PatternLayout
      - log4j.appender.stderr.layout.ConversionPattern=[%d] %p %m (%c)%n
  image:
    application: confluentinc/cp-server:{{ .Values.cfk.confluentPlatform.version }}
    init: confluentinc/confluent-init-container:{{ .Values.cfk.initContainer.version }}
  listeners:
    controller:
      authentication:
        type: mtls
        principalMappingRules:
          - "RULE:.*CN=([a-zA-Z0-9.-]*).*$/$1/"
          - "DEFAULT"
      tls:
        enabled: true
  tls:
    autoGeneratedCerts: true
  replicas: {{ .Values.replicas }}
  metrics:
    prometheus:
      rules:
        - pattern: kafka.server<type=raft-metrics><>(.+):(.*)
          name: kafka_server_raft_metrics_$1
          type: GAUGE
          cache: true
        - pattern: kafka.(\w+)<type=(.+), name=(.+)><>Value
          name: kafka_$1_$2_$3