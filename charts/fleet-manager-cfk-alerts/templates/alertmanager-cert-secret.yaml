{{- if .Values.alertmanager.enabled }}
{{- if and (empty .Values.certs.cert) (empty .Values.certManager.route53.hostedZoneID) }}
{{- fail "Either .Values.certs.cert or .Values.certManager.route53.hostedZoneID must be set" -}}
{{- end }}
{{- if .Values.certManager.route53.hostedZoneID -}}
{{- if empty .Values.certManager.namespace -}}
{{- fail "certManager.namespace must be set when certManager.route53.hostedZoneID is used" -}}
{{- end -}}
{{- if or (empty .Values.certManager.route53.region) (empty .Values.certManager.route53.accessKeyID) (empty .Values.certManager.route53.secretAccessKey) -}}
{{- fail ".Values.certManager.route53.region, accessKeyID and secretAccessKey must be set when certManager.route53.hostedZoneID is used" -}}
{{- end -}}
{{- if empty .Values.domain -}}
{{- fail ".Values.domain must be set when certManager.route53.hostedZoneID is used" -}}
{{- end -}}
{{- end }}
{{- if and (and .Values.certs.cert .Values.certs.key) (not .Values.certManager.route53.hostedZoneID) }}
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-tls
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  ca.crt: {{ .Values.certs.cert | b64enc | quote }}
  tls.crt: {{ .Values.certs.cert | b64enc | quote }}
  tls.key: {{ .Values.certs.key | b64enc | quote }}
{{- end }}
{{- end }}
