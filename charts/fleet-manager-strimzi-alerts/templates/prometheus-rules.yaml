apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    release: kafka-fleet-manager-prometheus
  name: kafka-broker-rules
spec:
  groups:
  - name: {{ .Release.Namespace }}-kafka-brokers.rules
    rules:
    - alert: KafkaRunningOutOfSpace
      expr: kubelet_volume_stats_available_bytes{persistentvolumeclaim=~"data(-[0-9]+)?-(.+)-kafka-[0-9]+",namespace="{{ .Release.Namespace }}"} * 100 / kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=~"data(-[0-9]+)?-(.+)-kafka-[0-9]+",namespace="{{ .Release.Namespace }}"} < 15
      for: 10s
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'Kafka is running out of free disk space'
        description: 'There are only {{`{{ $value }}`}} percent available at {{`{{ $labels.persistentvolumeclaim }}`}} PVC'
    - alert: UnderReplicatedPartitions
      expr: kafka_server_replicamanager_underreplicatedpartitions{namespace="{{ .Release.Namespace }}"} > 0
      for: 10s
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'Kafka under replicated partitions'
        description: 'There are {{`{{ $value }}`}} under replicated partitions on {{`{{ $labels.kubernetes_pod_name }}`}}'
    - alert: AbnormalControllerState
      expr: sum(kafka_controller_kafkacontroller_activecontrollercount{namespace="{{ .Release.Namespace }}"}) by (strimzi_io_name) != 1
      for: 10s
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'Kafka abnormal controller state'
        description: 'There are {{`{{ $value }}`}} active controllers in the cluster'
    - alert: OfflinePartitions
      expr: sum(kafka_controller_kafkacontroller_offlinepartitionscount{namespace="{{ .Release.Namespace }}"}) > 0
      for: 10s
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'Kafka offline partitions'
        description: 'One or more partitions have no leader'
    - alert: UnderMinIsrPartitionCount
      expr: kafka_server_replicamanager_underminisrpartitioncount{namespace="{{ .Release.Namespace }}"} > 0
      for: 10s
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'Kafka under min ISR partitions'
        description: 'There are {{`{{ $value }}`}} partitions under the min ISR on {{`{{ $labels.kubernetes_pod_name }}`}}'
    - alert: OfflineLogDirectoryCount
      expr: kafka_log_logmanager_offlinelogdirectorycount{namespace="{{ .Release.Namespace }}"} > 0
      for: 10s
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'Kafka offline log directories'
        description: 'There are {{`{{ $value }}`}} offline log directories on {{`{{ $labels.kubernetes_pod_name }}`}}'
    - alert: ScrapeProblem
      expr: up{kubernetes_pod_name=~"kafka-.+",namespace="{{ .Release.Namespace }}"} == 0
      for: 3m
      labels:
        severity: major
      annotations:
        summary: 'Prometheus unable to scrape metrics from {{`{{ $labels.kubernetes_pod_name }}`}}/{{`{{ $labels.instance }}`}}'
        description: 'Prometheus was unable to scrape metrics from {{`{{ $labels.kubernetes_pod_name }}`}}/{{`{{ $labels.instance }}`}} for more than 3 minutes'
    - alert: KafkaBrokerContainersDown
      expr: absent(container_last_seen{container="kafka",pod=~".+-kafka-[0-9]+",namespace="{{ .Release.Namespace }}"})
      for: 3m
      labels:
        severity: major
      annotations:
        summary: 'All `kafka` containers down or in CrashLookBackOff status'
        description: 'All `kafka` containers have been down or in CrashLookBackOff status for 3 minutes'
    - alert: KafkaContainerRestartedInTheLast5Minutes
      expr: count(count_over_time(container_last_seen{container="kafka",namespace="{{ .Release.Namespace }}"}[5m])) > 2 * count(container_last_seen{container="kafka",pod=~".+-kafka-[0-9]+",namespace="{{ .Release.Namespace }}"})
      for: 5m
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'One or more Kafka containers restarted too often'
        description: 'One or more Kafka containers were restarted too often within the last 5 minutes'
  - name: {{ .Release.Namespace }}-kafkaExporter
    rules:
    - alert: UnderReplicatedPartition
      expr: kafka_topic_partition_under_replicated_partition{namespace="{{ .Release.Namespace }}"} > 0
      for: 10s
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'Topic has under-replicated partitions'
        description: 'Topic  {{`{{ $labels.topic }}`}} has {{`{{ $value }}`}} under-replicated partition {{`{{ $labels.partition }}`}}'
    - alert: TooLargeConsumerGroupLag
      expr: kafka_consumergroup_lag{namespace="{{ .Release.Namespace }}"} > 1000
      for: 10s
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'Consumer group lag is too big'
        description: 'Consumer group {{`{{ $labels.consumergroup}}`}} lag is too big ({{`{{ $value }}`}}) on topic {{`{{ $labels.topic }}`}}/partition {{`{{ $labels.partition }}`}}'
    - alert: NoMessageForTooLong
      expr: changes(kafka_topic_partition_current_offset{namespace="{{ .Release.Namespace }}"}[10m]) == 0
      for: 10s
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'No message for 10 minutes'
        description: 'There is no messages in topic {{`{{ $labels.topic}}`}}/partition {{`{{ $labels.partition }}`}} for 10 minutes'
  - name: {{ .Release.Namespace }}-certificates
    interval: 1m0s
    rules:
    - alert: CertificateExpiration
      expr: |
        strimzi_certificate_expiration_timestamp_ms{namespace="{{ .Release.Namespace }}"}/1000 - time() < 30 * 24 * 60 * 60
      for: 5m
      labels:
        severity: warning
        cluster: {{ .Release.Namespace }}
      annotations:
        summary: 'Certificate will expire in less than 30 days'
        description: 'Certificate of type {{`{{ $labels.type }}`}} in cluster {{`{{ $labels.cluster }}`}} in namespace {{`{{ $labels.resource_namespace }}`}} will expire in less than 30 days'